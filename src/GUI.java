/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Walker
 */

import javax.swing.*;

public class GUI extends javax.swing.JFrame {
    private final String[] rankStrings = {"", "A", "2", "3", "4", "5", "6", "7", "8", "9", "T", "J", "Q", "K"};
    private final String[] suitStrings = {"", "♣", "♦", "♥", "♠"};
    private Game game;
    
    private boolean validUserHand = false, validTable = false;
    
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton11 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        MyCards_Rank_0 = new javax.swing.JSpinner();
        MyCards_Suit_0 = new javax.swing.JSpinner();
        MyCards_Rank_1 = new javax.swing.JSpinner();
        MyCards_Suit_1 = new javax.swing.JSpinner();
        MyCards_Button_Clear = new javax.swing.JButton();
        MyCards_Button_Enter = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        OpntCards_Rank_0 = new javax.swing.JSpinner();
        OpntCards_Suit_0 = new javax.swing.JSpinner();
        OpntCards_Rank_1 = new javax.swing.JSpinner();
        OpntCards_Suit_1 = new javax.swing.JSpinner();
        OpntCards_Button_Clear = new javax.swing.JButton();
        OpntCards_Button_Enter = new javax.swing.JToggleButton();
        jPanel3 = new javax.swing.JPanel();
        Table_Rank_0 = new javax.swing.JSpinner();
        Table_Suit_0 = new javax.swing.JSpinner();
        Table_Rank_1 = new javax.swing.JSpinner();
        Table_Suit_1 = new javax.swing.JSpinner();
        Table_Rank_2 = new javax.swing.JSpinner();
        Table_Clear_012 = new javax.swing.JButton();
        Table_Suit_2 = new javax.swing.JSpinner();
        Table_Rank_3 = new javax.swing.JSpinner();
        Table_Clear_3 = new javax.swing.JButton();
        Table_Suit_3 = new javax.swing.JSpinner();
        Table_Rank_4 = new javax.swing.JSpinner();
        Table_Clear_4 = new javax.swing.JButton();
        Table_Suit_4 = new javax.swing.JSpinner();
        Table_Enter_012 = new javax.swing.JButton();
        Table_Enter_3 = new javax.swing.JButton();
        Table_Enter_4 = new javax.swing.JButton();
        NewHandButton = new javax.swing.JButton();
        OddsButton = new javax.swing.JButton();
        output = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jButton11.setText("New Hand");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Poker Stats");
        setAlwaysOnTop(true);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("My Cards"));

        MyCards_Rank_0.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N

        MyCards_Rank_1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N

        MyCards_Button_Clear.setText("Clear");
        MyCards_Button_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserClear(evt);
            }
        });

        MyCards_Button_Enter.setText("Enter");
        MyCards_Button_Enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserEnter(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MyCards_Button_Clear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(MyCards_Button_Enter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(MyCards_Rank_0, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(MyCards_Rank_1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(MyCards_Suit_0, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(MyCards_Suit_1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MyCards_Rank_1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(MyCards_Rank_0))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MyCards_Suit_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MyCards_Suit_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MyCards_Button_Enter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MyCards_Button_Clear)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Opponent Cards"));

        OpntCards_Rank_0.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N

        OpntCards_Rank_1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N

        OpntCards_Button_Clear.setText("Clear");
        OpntCards_Button_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpponentClear(evt);
            }
        });

        OpntCards_Button_Enter.setText("Enter");
        OpntCards_Button_Enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpponentEnter(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(OpntCards_Rank_0, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(OpntCards_Suit_0))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(OpntCards_Rank_1, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(OpntCards_Suit_1)))
            .addComponent(OpntCards_Button_Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(OpntCards_Button_Enter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OpntCards_Rank_0, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(OpntCards_Rank_1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OpntCards_Suit_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OpntCards_Suit_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OpntCards_Button_Enter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OpntCards_Button_Clear))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Table"));

        Table_Rank_0.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N

        Table_Rank_1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N

        Table_Rank_2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N

        Table_Clear_012.setText("Clear");
        Table_Clear_012.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Table012Clear(evt);
            }
        });

        Table_Rank_3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        Table_Rank_3.setEnabled(false);

        Table_Clear_3.setText("Clear");
        Table_Clear_3.setEnabled(false);
        Table_Clear_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Table3Clear(evt);
            }
        });

        Table_Suit_3.setEnabled(false);

        Table_Rank_4.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        Table_Rank_4.setEnabled(false);

        Table_Clear_4.setText("Clear");
        Table_Clear_4.setEnabled(false);
        Table_Clear_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Table4Clear(evt);
            }
        });

        Table_Suit_4.setEnabled(false);

        Table_Enter_012.setText("Enter");
        Table_Enter_012.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Table012Enter(evt);
            }
        });

        Table_Enter_3.setText("Enter");
        Table_Enter_3.setEnabled(false);
        Table_Enter_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Table3Enter(evt);
            }
        });

        Table_Enter_4.setText("Enter");
        Table_Enter_4.setEnabled(false);
        Table_Enter_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Table4Enter(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Table_Enter_012, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Table_Clear_012, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Table_Suit_0, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Table_Rank_0, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Table_Rank_1, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                            .addComponent(Table_Suit_1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Table_Rank_2, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                            .addComponent(Table_Suit_2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Table_Rank_3)
                            .addComponent(Table_Suit_3)
                            .addComponent(Table_Clear_3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Table_Rank_4)
                            .addComponent(Table_Suit_4)
                            .addComponent(Table_Clear_4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Table_Enter_3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Table_Enter_4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Table_Rank_4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Table_Rank_2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Table_Rank_1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Table_Rank_0, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Table_Rank_3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Table_Suit_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Table_Suit_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Table_Suit_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Table_Suit_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Table_Suit_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Table_Enter_3)
                    .addComponent(Table_Enter_4)
                    .addComponent(Table_Enter_012))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Table_Clear_3)
                    .addComponent(Table_Clear_4)
                    .addComponent(Table_Clear_012)))
        );

        NewHandButton.setText("New Hand");
        NewHandButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewHandButton(evt);
            }
        });

        OddsButton.setText("Odds");
        OddsButton.setEnabled(false);
        OddsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oddsButton(evt);
            }
        });

        output.setEditable(false);
        output.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel1.setText("Chances of Winning:");

        jLabel2.setText("%");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(output, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(OddsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NewHandButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, Short.MAX_VALUE))
                .addGap(23, 23, 23)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(output, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(OddsButton)
                    .addComponent(NewHandButton)
                    .addComponent(jLabel1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NewHandButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewHandButton
        // TODO add your handling code here:
        setNewHand();
    }//GEN-LAST:event_NewHandButton

    private void UserEnter(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserEnter
        // TODO add your handling code here:
        if (userCard(0).isUnknown() || userCard(1).isUnknown()) {
            JOptionPane.showMessageDialog(this, "Error: Make sure there are no blank inputs.");
        } else if (!game.deck.contains(userCard(0))) {
            JOptionPane.showMessageDialog(this, "Error: The card '" + userCard(0).stringName() + "' is already somewhere else.");
        } else if (!game.deck.contains(userCard(1))) {
            JOptionPane.showMessageDialog(this, "Error: The card '" + userCard(1).stringName() + "' is already somewhere else.");
        } else if (userCard(0).matches(userCard(1))) {
            JOptionPane.showMessageDialog(this, "Error: You cannot have the same two cards in your hand.");
        } else {
            game.addToUser(userCard(0), 0);
            //TEMP
            System.out.println(game.user.cards[0].stringName());
            game.addToUser(userCard(1), 1);
            //TEMP
            System.out.println(game.user.cards[1].stringName());
            validUserHand = true;
            this.MyCards_Button_Enter.setEnabled(false);
            this.MyCards_Rank_0.setEnabled(false);
            this.MyCards_Suit_0.setEnabled(false);
            this.MyCards_Rank_1.setEnabled(false);
            this.MyCards_Suit_1.setEnabled(false);
        }
        setOddsButton();
    }//GEN-LAST:event_UserEnter

    private void UserClear(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserClear
        // TODO add your handling code here:
        if (userCard(1).isFullyKnown() && game.user.contains(userCard(1)))
            game.removeFromUser(1);
        if (userCard(0).isFullyKnown() && game.user.contains(userCard(0)))
            game.removeFromUser(0);
        this.MyCards_Button_Enter.setEnabled(true);
        this.MyCards_Rank_0.setValue("");
        this.MyCards_Rank_1.setValue("");
        this.MyCards_Suit_0.setValue("");
        this.MyCards_Suit_1.setValue("");
        this.MyCards_Rank_0.setEnabled(true);
        this.MyCards_Suit_0.setEnabled(true);
        this.MyCards_Rank_1.setEnabled(true);
        this.MyCards_Suit_1.setEnabled(true);
        this.validUserHand = false;
        setOddsButton();
    }//GEN-LAST:event_UserClear

    private void OpponentEnter(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpponentEnter
        // TODO add your handling code here:
        if (opponentCard(0).isUnknown() || opponentCard(1).isUnknown()) {
            JOptionPane.showMessageDialog(this, "Error: Make sure there are no blank inputs.");
        } else if (!game.deck.contains(opponentCard(0))) {
            JOptionPane.showMessageDialog(this, "Error: The card '" + opponentCard(0).stringName() + "' is already somewhere else.");
        } else if (!game.deck.contains(opponentCard(1))) {
            JOptionPane.showMessageDialog(this, "Error: The card '" + opponentCard(1).stringName() + "' is already somewhere else.");
        } else if (opponentCard(0).matches(opponentCard(1))) {
            JOptionPane.showMessageDialog(this, "Error: You cannot have the same two cards in your hand.");
        } else {
            this.OpntCards_Button_Enter.setEnabled(false);
            this.OpntCards_Rank_0.setEnabled(false);
            this.OpntCards_Suit_0.setEnabled(false);
            this.OpntCards_Rank_1.setEnabled(false);
            this.OpntCards_Suit_1.setEnabled(false);
            game.addToOpponent(opponentCard(0), 0);
            game.addToOpponent(opponentCard(1), 1);
        }
        setOddsButton();
    }//GEN-LAST:event_OpponentEnter

    private void OpponentClear(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpponentClear
        // TODO add your handling code here:
        if (opponentCard(1).isFullyKnown() && game.opponent.contains(opponentCard(1)))
            game.removeFromOpponent(1);
        if (opponentCard(0).isFullyKnown() && game.opponent.contains(opponentCard(0)))
            game.removeFromOpponent(0);
        this.OpntCards_Button_Enter.setEnabled(true);
        this.OpntCards_Rank_0.setValue("");
        this.OpntCards_Rank_1.setValue("");
        this.OpntCards_Suit_0.setValue("");
        this.OpntCards_Suit_1.setValue("");
        this.OpntCards_Rank_0.setEnabled(true);
        this.OpntCards_Suit_0.setEnabled(true);
        this.OpntCards_Rank_1.setEnabled(true);
        this.OpntCards_Suit_1.setEnabled(true);
        setOddsButton();
    }//GEN-LAST:event_OpponentClear

    private void Table012Enter(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Table012Enter
        boolean validEntry = true;                
        
        
        
        for (int i = 0; i <= 2; i++) {
            if (!validEntry)
                break;
            if (tableCard(i).isUnknown()) {
                JOptionPane.showMessageDialog(this, "Error: Make sure there are no blank inputs.");
                validEntry = false;
            } else if (!game.deck.contains(tableCard(i))) {
                JOptionPane.showMessageDialog(this, "Error: The card '" + tableCard(i).stringName() + "' is already somewhere else.");
                validEntry = false;
            }
        }
        
        if (tableCard(0).matches(tableCard(1)) ||
                tableCard(1).matches(tableCard(2)) ||
                tableCard(2).matches(tableCard(0))) {
            JOptionPane.showMessageDialog(this, "Error: Cannot have the same cards as inputs.");
            validEntry = false;
        }
        
        if (validEntry) {
            this.Table_Enter_012.setEnabled(false);
            this.Table_Rank_0.setEnabled(false);
            this.Table_Suit_0.setEnabled(false);
            this.Table_Rank_1.setEnabled(false);
            this.Table_Suit_1.setEnabled(false);
            this.Table_Rank_2.setEnabled(false);
            this.Table_Suit_2.setEnabled(false);
            
            for (int i = 0; i < 3; i++) {
                game.addToTable(tableCard(i), i);
            }
            validTable = true;
            
            this.Table_Rank_3.setEnabled(true);
            this.Table_Suit_3.setEnabled(true);
            this.Table_Enter_3.setEnabled(true);
            this.Table_Clear_3.setEnabled(true);
        }
        setOddsButton();
    }//GEN-LAST:event_Table012Enter

    private void Table012Clear(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Table012Clear
        // TODO add your handling code here:
        for (int i = 0; i < 3; i++) {
            if (tableCard(i).isFullyKnown() && game.table.contains(tableCard(0)))
                game.removeFromTable(0);
        }
        this.Table_Enter_012.setEnabled(true);
        this.Table_Rank_0.setValue("");
        this.Table_Suit_0.setValue("");
        this.Table_Rank_1.setValue("");
        this.Table_Suit_1.setValue("");
        this.Table_Rank_2.setValue("");
        this.Table_Suit_2.setValue("");
        
        this.Table_Rank_0.setEnabled(true);
        this.Table_Suit_0.setEnabled(true);
        this.Table_Rank_1.setEnabled(true);
        this.Table_Suit_1.setEnabled(true);
        this.Table_Rank_2.setEnabled(true);
        this.Table_Suit_2.setEnabled(true);
        
        this.Table_Rank_3.setEnabled(false);
        this.Table_Suit_3.setEnabled(false);
        this.Table_Enter_3.setEnabled(false);
        this.Table_Clear_3.setEnabled(false);
        
        this.validTable = false;
        setOddsButton();
    }//GEN-LAST:event_Table012Clear

    private void Table3Enter(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Table3Enter
        // TODO add your handling code here:
        if (tableCard(3).isUnknown()) {
            JOptionPane.showMessageDialog(this, "Error: Make sure there are no blank inputs.");
        } else if (!game.deck.contains(tableCard(3))) {
            JOptionPane.showMessageDialog(this, "Error: The card '" + tableCard(3).stringName() + "' is already somewhere else.");
        } else {
            game.addToTable(tableCard(3), 3);
            this.Table_Enter_3.setEnabled(false);
            this.Table_Rank_3.setEnabled(false);
            this.Table_Suit_3.setEnabled(false);
            this.Table_Clear_012.setEnabled(false);
            this.Table_Enter_4.setEnabled(true);
            this.Table_Clear_4.setEnabled(true);
            this.Table_Rank_4.setEnabled(true);
            this.Table_Suit_4.setEnabled(true);
        }
        setOddsButton();
    }//GEN-LAST:event_Table3Enter

    private void Table3Clear(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Table3Clear
        // TODO add your handling code here:
        if (tableCard(3).isFullyKnown() && game.table.contains(tableCard(3)))
            game.removeFromTable(3);
        
        this.Table_Enter_3.setEnabled(true);
        this.Table_Clear_3.setEnabled(true);
        this.Table_Rank_3.setValue("");
        this.Table_Suit_3.setValue("");
        
        this.Table_Rank_3.setEnabled(true);
        this.Table_Suit_3.setEnabled(true);

        this.Table_Rank_4.setEnabled(false);
        this.Table_Suit_4.setEnabled(false);
        this.Table_Enter_4.setEnabled(false);

        this.Table_Clear_012.setEnabled(true);
        setOddsButton();
    }//GEN-LAST:event_Table3Clear

    private void Table4Enter(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Table4Enter
        // TODO add your handling code here:
        if (tableCard(4).isUnknown()) {
            JOptionPane.showMessageDialog(this, "Error: Make sure there are no blank inputs.");
        } else if (!game.deck.contains(tableCard(4))) {
            JOptionPane.showMessageDialog(this, "Error: The card '" + tableCard(4).stringName() + "' is already somewhere else.");
        } else {
            game.addToTable(tableCard(4), 4);
            this.Table_Enter_4.setEnabled(false);
            this.Table_Rank_4.setEnabled(false);
            this.Table_Suit_4.setEnabled(false);
            this.Table_Clear_3.setEnabled(false);
        }
        setOddsButton();
    }//GEN-LAST:event_Table4Enter

    private void Table4Clear(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Table4Clear
        // TODO add your handling code here:
        if (tableCard(4).isFullyKnown() && game.table.contains(tableCard(4)))
            game.removeFromTable(4);
        
        this.Table_Enter_4.setEnabled(true);
        this.Table_Rank_4.setValue("");
        this.Table_Suit_4.setValue("");
        
        this.Table_Rank_4.setEnabled(true);
        this.Table_Suit_4.setEnabled(true);

        this.Table_Clear_3.setEnabled(true);
        setOddsButton();
    }//GEN-LAST:event_Table4Clear

    private void oddsButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oddsButton
        // TODO add your handling code here:
        output.setText("running");
        showOdds();
    }//GEN-LAST:event_oddsButton
    
    private void showOdds() {
        double d = game.odds();
        output.setText(Double.toString(d));
    }
    
    private void setOddsButton() {
        if (this.validTable && this.validUserHand)
            this.OddsButton.setEnabled(true);
        else
            this.OddsButton.setEnabled(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GUI g = new GUI();
                g.setVisible(true);
                g.setNewHand();
            }
        });
 
        
    }
    
    private Card userCard(int index) {
        if (index == 0)
            return cardFromSpinners(this.MyCards_Rank_0, this.MyCards_Suit_0);
        else if (index == 1)
            return cardFromSpinners(this.MyCards_Rank_1, this.MyCards_Suit_1);
        else
            return new Card();
    }
    
    private Card opponentCard(int index) {
        if (index == 0)
            return cardFromSpinners(this.OpntCards_Rank_0, this.OpntCards_Suit_0);
        else if (index == 1)
            return cardFromSpinners(this.OpntCards_Rank_1, this.OpntCards_Suit_1);
        else
            return new Card();
    }
    
    private Card tableCard(int index) {
        switch (index) {
            case 0:
                return cardFromSpinners(this.Table_Rank_0, this.Table_Suit_0);
            case 1:
                return cardFromSpinners(this.Table_Rank_1, this.Table_Suit_1);
            case 2:
                return cardFromSpinners(this.Table_Rank_2, this.Table_Suit_2);
            case 3:
                return cardFromSpinners(this.Table_Rank_3, this.Table_Suit_3);
            case 4:
                return cardFromSpinners(this.Table_Rank_4, this.Table_Suit_4);
            default:
                return new Card();
        }
    }
    
    private Card cardFromSpinners(JSpinner rankSpinner, JSpinner suitSpinner) {
        String ranks = "A23456789TJQK";
        String suits = "♣♦♥♠";
        if (rankSpinner.getValue().equals("") || suitSpinner.getValue().equals(""))
            return new Card();
        return new Card(ranks.indexOf((String)rankSpinner.getValue()), suits.indexOf((String)suitSpinner.getValue()));
    }
    
    private void setNewHand() {
        game = new Game();
        validUserHand = false;
        validTable = false;
        this.output.setText("");
        
        MyCards_Button_Clear.setEnabled(true);
        MyCards_Button_Enter.setEnabled(true);
        MyCards_Rank_0.setEnabled(true);
        MyCards_Rank_1.setEnabled(true);
        MyCards_Suit_0.setEnabled(true);
        MyCards_Suit_1.setEnabled(true);
        NewHandButton.setEnabled(true);
        OddsButton.setEnabled(true);
        OpntCards_Button_Clear.setEnabled(true);
        OpntCards_Button_Enter.setEnabled(true);
        OpntCards_Rank_0.setEnabled(true);
        OpntCards_Rank_1.setEnabled(true);
        OpntCards_Suit_0.setEnabled(true);
        OpntCards_Suit_1.setEnabled(true);
        Table_Clear_012.setEnabled(true);
        Table_Clear_3.setEnabled(false);
        Table_Clear_4.setEnabled(false);
        Table_Enter_012.setEnabled(true);
        Table_Enter_3.setEnabled(false);
        Table_Enter_4.setEnabled(false);
        Table_Rank_0.setEnabled(true);
        Table_Rank_1.setEnabled(true);
        Table_Rank_2.setEnabled(true);
        Table_Rank_3.setEnabled(false);
        Table_Rank_4.setEnabled(false);
        Table_Suit_0.setEnabled(true);
        Table_Suit_1.setEnabled(true);
        Table_Suit_2.setEnabled(true);
        Table_Suit_3.setEnabled(false);
        Table_Suit_4.setEnabled(false);
        setOddsButton();
        
        SpinnerListModel myCardsRank1Model = new SpinnerListModel(rankStrings);
        SpinnerListModel myCardsRank2Model = new SpinnerListModel(rankStrings);
        SpinnerListModel opntCardsRank1Model = new SpinnerListModel(rankStrings);
        SpinnerListModel opntCardsRank2Model = new SpinnerListModel(rankStrings);
        SpinnerListModel tableRank1Model = new SpinnerListModel(rankStrings);
        SpinnerListModel tableRank2Model = new SpinnerListModel(rankStrings);
        SpinnerListModel tableRank3Model = new SpinnerListModel(rankStrings);
        SpinnerListModel tableRank4Model = new SpinnerListModel(rankStrings);
        SpinnerListModel tableRank5Model = new SpinnerListModel(rankStrings);

        SpinnerListModel myCardsSuit1Model = new SpinnerListModel(suitStrings);
        SpinnerListModel myCardsSuit2Model = new SpinnerListModel(suitStrings);
        SpinnerListModel opntCardsSuit1Model = new SpinnerListModel(suitStrings);
        SpinnerListModel opntCardsSuit2Model = new SpinnerListModel(suitStrings);
        SpinnerListModel tableSuit1Model = new SpinnerListModel(suitStrings);
        SpinnerListModel tableSuit2Model = new SpinnerListModel(suitStrings);
        SpinnerListModel tableSuit3Model = new SpinnerListModel(suitStrings);
        SpinnerListModel tableSuit4Model = new SpinnerListModel(suitStrings);
        SpinnerListModel tableSuit5Model = new SpinnerListModel(suitStrings);

        MyCards_Rank_0.setModel(myCardsRank1Model);
        MyCards_Rank_1.setModel(myCardsRank2Model);
        OpntCards_Rank_0.setModel(opntCardsRank1Model);
        OpntCards_Rank_1.setModel(opntCardsRank2Model);
        Table_Rank_0.setModel(tableRank1Model);
        Table_Rank_1.setModel(tableRank2Model);
        Table_Rank_2.setModel(tableRank3Model);
        Table_Rank_3.setModel(tableRank4Model);
        Table_Rank_4.setModel(tableRank5Model);

        MyCards_Suit_0.setModel(myCardsSuit1Model);
        MyCards_Suit_1.setModel(myCardsSuit2Model);
        OpntCards_Suit_0.setModel(opntCardsSuit1Model);
        OpntCards_Suit_1.setModel(opntCardsSuit2Model);
        Table_Suit_0.setModel(tableSuit1Model);
        Table_Suit_1.setModel(tableSuit2Model);
        Table_Suit_2.setModel(tableSuit3Model);
        Table_Suit_3.setModel(tableSuit4Model);
        Table_Suit_4.setModel(tableSuit5Model);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton MyCards_Button_Clear;
    private javax.swing.JToggleButton MyCards_Button_Enter;
    private javax.swing.JSpinner MyCards_Rank_0;
    private javax.swing.JSpinner MyCards_Rank_1;
    private javax.swing.JSpinner MyCards_Suit_0;
    private javax.swing.JSpinner MyCards_Suit_1;
    private javax.swing.JButton NewHandButton;
    private javax.swing.JButton OddsButton;
    private javax.swing.JButton OpntCards_Button_Clear;
    private javax.swing.JToggleButton OpntCards_Button_Enter;
    private javax.swing.JSpinner OpntCards_Rank_0;
    private javax.swing.JSpinner OpntCards_Rank_1;
    private javax.swing.JSpinner OpntCards_Suit_0;
    private javax.swing.JSpinner OpntCards_Suit_1;
    private javax.swing.JButton Table_Clear_012;
    private javax.swing.JButton Table_Clear_3;
    private javax.swing.JButton Table_Clear_4;
    private javax.swing.JButton Table_Enter_012;
    private javax.swing.JButton Table_Enter_3;
    private javax.swing.JButton Table_Enter_4;
    private javax.swing.JSpinner Table_Rank_0;
    private javax.swing.JSpinner Table_Rank_1;
    private javax.swing.JSpinner Table_Rank_2;
    private javax.swing.JSpinner Table_Rank_3;
    private javax.swing.JSpinner Table_Rank_4;
    private javax.swing.JSpinner Table_Suit_0;
    private javax.swing.JSpinner Table_Suit_1;
    private javax.swing.JSpinner Table_Suit_2;
    private javax.swing.JSpinner Table_Suit_3;
    private javax.swing.JSpinner Table_Suit_4;
    private javax.swing.JButton jButton11;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField output;
    // End of variables declaration//GEN-END:variables
}
